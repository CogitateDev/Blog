<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Coroutine on Deep thinking</title><link>https://bravebuffalo.cc/en/tags/coroutine/</link><description>Recent content in Coroutine on Deep thinking</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Tue, 30 Mar 2021 19:10:30 +0800</lastBuildDate><atom:link href="https://bravebuffalo.cc/en/tags/coroutine/index.xml" rel="self" type="application/rss+xml"/><item><title>A introduction to Kotlin cotoutine-from zero to multiple</title><link>https://bravebuffalo.cc/en/post/A%20introduction%20to%20Kotlin%20cotoutine-from%20zero%20to%20multiple.html</link><pubDate>Tue, 30 Mar 2021 19:10:30 +0800</pubDate><guid>https://bravebuffalo.cc/en/post/A%20introduction%20to%20Kotlin%20cotoutine-from%20zero%20to%20multiple.html</guid><description>In the last post, I introduced the creation, use, and collaboration of Kotlin coroutines. This post will introduce more usage scenarios and continue to take you into the world of coroutines.
使用协程处理异步数据流 #Common programming languages have built-in representations of datasets of different objects of the same type, often called container classes.</description></item><item><title>A introduction to Kotlin coroutine-from theory to practice</title><link>https://bravebuffalo.cc/en/post/A%20introduction%20to%20Kotlin%20coroutine-from%20theory%20to%20practice.html</link><pubDate>Sat, 27 Mar 2021 19:02:30 +0800</pubDate><guid>https://bravebuffalo.cc/en/post/A%20introduction%20to%20Kotlin%20coroutine-from%20theory%20to%20practice.html</guid><description>The previous article partially explained Kotlin coroutines from a theoretical point of view, and this article will continue the journey of coroutines from a practical point of view, based on the previous article.
From the source #In Kotlin, in order to use a coroutine, it first needs to be created using a co-creator, but there&amp;rsquo;s another prerequisite - a co-program scope (CoroutineScope).</description></item><item><title>A introduction to Kotlin coroutine-those unclear relationships</title><link>https://bravebuffalo.cc/en/post/A%20introduction%20to%20Kotlin%20coroutine-those%20unclear%20relationships.html</link><pubDate>Fri, 26 Mar 2021 18:50:29 +0800</pubDate><guid>https://bravebuffalo.cc/en/post/A%20introduction%20to%20Kotlin%20coroutine-those%20unclear%20relationships.html</guid><description>Kotlin&amp;rsquo;s coroutines have been increasingly sought after by Android developers since its introduction. On the other hand, due to its huge API, it has also shut out a considerable number of developers. This article tries to start from a few important concepts of coroutines, in the complex API to restore its original face, to bring readers into the Kotlin coroutine world with a new perspective.</description></item></channel></rss>