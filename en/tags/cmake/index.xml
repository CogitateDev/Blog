<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>CMake on Deep thinking</title><link>https://bravebuffalo.cc/en/tags/cmake/</link><description>Recent content in CMake on Deep thinking</description><generator>Hugo</generator><language>en</language><lastBuildDate>Mon, 09 Aug 2021 19:21:49 +0800</lastBuildDate><atom:link href="https://bravebuffalo.cc/en/tags/cmake/index.xml" rel="self" type="application/rss+xml"/><item><title>Personal understanding and useage of CMake</title><link>https://bravebuffalo.cc/en/post/Personal%20understanding%20and%20useage%20of%20CMake.html</link><pubDate>Mon, 09 Aug 2021 19:21:49 +0800</pubDate><guid>https://bravebuffalo.cc/en/post/Personal%20understanding%20and%20useage%20of%20CMake.html</guid><description>&lt;h1 id="preface" class="relative group">Preface &lt;span class="absolute top-0 w-6 transition-opacity opacity-0 -start-6 not-prose group-hover:opacity-100">&lt;a class="group-hover:text-primary-300 dark:group-hover:text-neutral-700" style="text-decoration-line: none !important;" href="#preface" aria-label="Anchor">#&lt;/a>&lt;/span>&lt;/h1>&lt;p>CMake is a build tool, through which you can easily create cross-platform projects. It is usually used to build a project in two steps: generating a project file from the source code, and building the target product (which may be a dynamic library, a static library, or an executable program) from the project file. One of the main advantages of using CMake is that in the multi-platform or multi-people collaborative projects, developers can make their own preferences to make the choice of IDE, not subject to the influence of other people&amp;rsquo;s project configuration, it is a bit like a cross-platform IDE, through which the configuration of the relevant settings, you can be in multiple platforms seamlessly, improve development efficiency.&lt;/p></description></item></channel></rss>